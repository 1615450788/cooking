#!/usr/bin/env node

var path = require('path')
var CWD_PATH = require('../util/path').CWD_PATH
var program = require('commander')
var logger = require('../util/logger')
var webpack = require('webpack')
var shelljs = require('shelljs')
var ProgressBarPlugin = require('progress-bar-webpack-plugin')
var chalk = require('chalk')

program
  .option('-c --config <configfile>', 'Webpack config file')
  .option('-p --progress', 'Display progress')
  .option('--no-color', 'Disable colors to display the statistics')
  .parse(process.argv)

// set env
process.env.NODE_ENV = 'production'

console.log()
process.on('exit', function () {
  console.log()
})

var config
var configPath = path.join(CWD_PATH, program.config || 'cooking.conf.js')

// load config
try {
  config = require(configPath)
} catch (e) {
  logger.error('Failed to read the config.')
  logger.fatal(e.stack)
}

// install resolve path
require('../util/load-resolve-path')(config)

if (config.__COOKING_CLEAN__) {
  shelljs.rm('-rf', config.output.path)
}

// register progressbar
if (program.progress) {
  config.plugins.push(new ProgressBarPlugin({
    format: '  build [:bar] ' + chalk.green.bold(':percent') + ' (:elapsed seconds)',
    clear: false
  }))
}

// production
webpack(config).run(function (err, stats) {
  if (err) {
    logger.err(err)
    return
  }
  logger.success('info\n' + stats.toString({
    colors: program.color,
    chunks: false,
    children: false
  }))
})
