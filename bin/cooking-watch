#!/usr/bin/env node

var WebpackHotServer = require('webpack-hot-server');
var webpack = require('webpack');
var open = require('open');
var utils = require('./../src/utils');
var CONTACTS = require('./../src/contacts');
var hotReload = require('./../src/libs/hot-reload');

module.exports = function() {
  var baseConfig, userConfig, compiler, port, config;

  userConfig = utils.loadUserConfig();
  port = userConfig.port || 8080;
  if (!userConfig) {
    return;
  }
  baseConfig = utils.loadWebpackConfig(CONTACTS.DEV, userConfig.use);
  config = utils.webpackMerge(baseConfig, userConfig);
  config = hotReload(config);

  if (!userConfig.nodeServer) {
    compiler = webpack(config);
    compiler.watch({ // watch options:
      aggregateTimeout: 300, // wait so long for more changes
      poll: true // use polling instead of native watchers
    }, function(err, stats) {
      if (err) {
        return console.log(err);
      }
      console.log(stats.toString({ colors: true, chunks: false }));
    });
    return;
  }

  // need node server
  WebpackHotServer({
    config: config,
    port: port,
    customIndex: true
  }).catch(function(err) {
    console.error(err);
  });
};
