#!/usr/bin/env node

var path = require('path')
var CWD_PATH = require('../util/path').CWD_PATH
var program = require('commander')
var logger = require('../util/logger')
var webpack = require('webpack')
var DevServer = require('webpack-dev-server')

program
  .option('-c --config <configfile>', 'Webpack config file')
  .parse(process.argv)

// set env
process.env.NODE_ENV = 'development'

console.log()
process.on('exit', function () {
  console.log()
})

var config
var configPath = path.join(CWD_PATH, program.config || 'cooking.conf.js')

// load config
try {
  config = require(configPath)
} catch (e) {
  logger.error('Failed to read the config.')
  logger.fatal(e.stack)
}

var port = 8080
var hostname = 'http://localhost'
var host = hostname + ':' + port
var defaultStats = 'errors-only'

// load hot loader
config.entry = require('../util/hot-reload')(config.entry, host)

// run watch
if (!config.devServer || !config.devServer.enable) {
  var compiler = webpack(config)

  logger.log('启动中...')
  compiler.watch({}, function (err, stats) {
    if (err) {
      logger.error(err)
      return
    }

    logger.log('webpack info \n' + stats.toString(defaultStats))
  })
} else {
  // webpack dev server
  logger.log('server 启动中...')

  port = config.devServer.port || port
  hostname = config.devServer.hostname || hostname
  host = hostname + ':' + port
  config.devServer.stats = config.devServer.stats || defaultStats
  config.output.publicPath = config.devServer.publicPath || config.output.publicPath

  new DevServer(webpack(config), config.devServer)
    .listen(port, 'localhost', function () {
      logger.success('Listening at ' + host)
    })
}
